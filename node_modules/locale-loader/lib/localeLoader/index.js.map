{"version":3,"sources":["lib/localeLoader/index.js"],"names":["module","exports","localeLoader","content","callback","async","readdir","context","f","files","filter","chunk","noChunk"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAAA;;AAC9C,MAAMC,WAAW,KAAKC,KAAL,EAAjB;AACA,MAAI,4BAAaF,OAAb,CAAJ,EAA2B;AACzB,+DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsB,kBAAGG,OAAH,CAAW,MAAKC,OAAhB,CADtB;;AAAA;AAAA,4BACuD;AAAA,uBAAK,4BAAaC,CAAb,CAAL;AAAA,eADvD;;AACOC,mBADP,iBACgDC,MADhD;;AAECN,uBAAS,IAAT,EAAe,qCAAsB;AACnCK,4BADmC;AAEnCE,uBAAO,CAAC,uBAAaC,OAAb,CAAqBT,OAArB;AAF2B,eAAtB,CAAf;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAOD,GARD,MAQO;AACLC,aAAS,IAAT,EAAeD,OAAf;AACD;AACF,CAbD","file":"index.js","sourcesContent":["import fs from 'fs-extra';\nimport generateLoaderContent from '../generateLoaderContent';\nimport isLocaleFile from '../isLocaleFile';\nimport isLoaderFile from '../isLoaderFile';\n\nmodule.exports = function localeLoader(content) {\n  const callback = this.async();\n  if (isLoaderFile(content)) {\n    (async () => {\n      const files = (await fs.readdir(this.context)).filter(f => isLocaleFile(f));\n      callback(null, generateLoaderContent({\n        files,\n        chunk: !isLoaderFile.noChunk(content),\n      }));\n    })();\n  } else {\n    callback(null, content);\n  }\n};\n"]}