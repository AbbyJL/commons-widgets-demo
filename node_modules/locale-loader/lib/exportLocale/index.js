'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var writeXlf = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(_ref2) {
    var _this = this;

    var localizationFolder = _ref2.localizationFolder,
        xlfData = _ref2.xlfData;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _fsExtra2.default.ensureDir(localizationFolder);

          case 2:
            _context2.next = 4;
            return _promise2.default.all((0, _keys2.default)(xlfData).map(function () {
              var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(locale) {
                var fileName;
                return _regenerator2.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        fileName = _path2.default.resolve(localizationFolder, locale + '.xlf');
                        _context.next = 3;
                        return _fsExtra2.default.writeFile(fileName, xlfData[locale]);

                      case 3:
                      case 'end':
                        return _context.stop();
                    }
                  }
                }, _callee, _this);
              }));

              return function (_x2) {
                return _ref3.apply(this, arguments);
              };
            }()));

          case 4:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function writeXlf(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _getRawData = require('../getRawData');

var _getRawData2 = _interopRequireDefault(_getRawData);

var _defaultConfig = require('../../defaultConfig');

var _defaultConfig2 = _interopRequireDefault(_defaultConfig);

var _generateXlfData = require('../generateXlfData');

var _generateXlfData2 = _interopRequireDefault(_generateXlfData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
    var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref5$sourceFolder = _ref5.sourceFolder,
        sourceFolder = _ref5$sourceFolder === undefined ? _defaultConfig2.default.sourceFolder : _ref5$sourceFolder,
        _ref5$localizationFol = _ref5.localizationFolder,
        localizationFolder = _ref5$localizationFol === undefined ? _defaultConfig2.default.localizationFolder : _ref5$localizationFol,
        _ref5$sourceLocale = _ref5.sourceLocale,
        sourceLocale = _ref5$sourceLocale === undefined ? _defaultConfig2.default.sourceLocale : _ref5$sourceLocale,
        _ref5$supportedLocale = _ref5.supportedLocales,
        supportedLocales = _ref5$supportedLocale === undefined ? _defaultConfig2.default.supportedLocales : _ref5$supportedLocale,
        _ref5$exportType = _ref5.exportType,
        exportType = _ref5$exportType === undefined ? 'diff' : _ref5$exportType;

    var rawData, xlfData;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return (0, _getRawData2.default)({
              sourceFolder: sourceFolder,
              sourceLocale: sourceLocale,
              supportedLocales: supportedLocales
            });

          case 2:
            rawData = _context3.sent;
            xlfData = (0, _generateXlfData2.default)({
              rawData: rawData,
              sourceFolder: sourceFolder,
              sourceLocale: sourceLocale,
              supportedLocales: supportedLocales,
              exportType: exportType
            });
            _context3.next = 6;
            return writeXlf({
              xlfData: xlfData,
              localizationFolder: localizationFolder
            });

          case 6:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  function exportLocale() {
    return _ref4.apply(this, arguments);
  }

  return exportLocale;
}();
//# sourceMappingURL=index.js.map
